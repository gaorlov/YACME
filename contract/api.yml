swagger: "2.0"
info:
  version: 1.0.0
  title: YACME (Yet Another Config Management Engine)
  description: Handles Kubernetes and Concourse configuration for services, so that devs never have to think about those things and get their work done

tags:
  - name: component_types
    description: Component registry
  - name: apps
    description: individual app interface
  - name: docs
    description: API contract definition
consumes:
  - application/vnd.api+json
produces:
  - application/vnd.api+json
paths:
  /apps:
    post:
      summary: New app
      description: Creates a new app
      tags:
        - app
      responses:
        201:
          description: Successfully created app
        400:
          description: Bad input
          schema:
            $ref: "#/responses/errors"

  /apps/{app-slug}:
    get:
      summary: Individual app
      description: Show full list of properties for an app. Its pipeline link, components, etc.
      tags:
        - apps
      responses:
        200:
          description: OK
        404:
          description: App not found
          schema:
            $ref: "#/responses/errors"
    put:
      summary: Update individual app properties
      description: Update selective app properties for a specific app
      tags:
        - apps
      responses:
        200:
          description: OK
        404:
          description: App not found
          schema:
            $ref: "#/responses/errors"
    delete:
      summary: Delete app
      description:
      tags:
        - apps
      responses:
        200:
          description: OK
        404:
          description: component type not found
          schema:
            $ref: "#/responses/errors"

  /apps/{app-slug}/components:
    get:
      summary: List of components of app
      description: 
      tags:
        - apps
    responses:
      200:
        description: OK
      404:
        description: App not found
        schema:
          $ref: "#/responses/errors"
    post:
      summary: New component for app
      description: 
      tags:
        - apps
      responses:
        201:
          description: Created
        202:
          description: Accepted. Component still creating.
        400:
          description: Bad input
          schema:
            $ref: "#/responses/errors"
        404:
          description: App not found
          schema:
            $ref: "#/responses/errors"

  /apps/{app-slug}/components/{component-slug}:
    get:
      summary: Individual app component
      description: 
      tags:
        - apps
      responses:
        200:
          description: OK
        202:
          description: Accepted. Component still creating.
        404:
          description: App or component not found
          schema:
            $ref: "#/responses/errors"

    put:
      summary: Update app component
      description: 
      tags:
        - apps
      responses:
        200:
          description: OK
        202:
          description: Accepted. Component still creating.
        404:
          description: App or component not found
          schema:
            $ref: "#/responses/errors"
    delete:
      summary: Delete app component
      description:
      tags:
        - apps
      responses:
        200:
          description: OK
        404:
          description: component type not found
          schema:
            $ref: "#/responses/errors"

  /component-types:
    get:
      summary: List of all known component_types
      description: 
      tags:
        - component_types
      responses:
        200:
          description: OK
    post:
      summary: Create new component type
      description: 
      tags:
        - component_types
      responses:
        201:
          description: New component type created
        400:
          description: Bad input
          schema:
            $ref: "#/responses/errors"

  /component-types/{component-type-slug}:
    get:
      summary: Individual component details
      description:
      tags:
        - component_types
      responses:
        200:
          description: OK
        404:
          description: component type not found
          schema:
            $ref: "#/responses/errors"
    put:
      summary: Update component details
      description:
      tags:
        - component_types
      responses:
        200:
          description: OK
        404:
          description: component type not found
          schema:
            $ref: "#/responses/errors"
    delete:
      summary: Delete component type
      description:
      tags:
        - component_types
      responses:
        200:
          description: OK
        404:
          description: component type not found
          schema:
            $ref: "#/responses/errors"

  /docs:
    get:
      summary: API Docs
      description: Swagger formatted API json. This document
      tags:
        - docs
      responses:
        200:
          description: OK

responses:
  errors:
    type: object
    properties:
      errors:
        type: array
        items:
          type: string
        example:
          - Component type LOL-NOT-EVEN-REDIS was not found
  app:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: YACME API
      repo:
        type: string
        example: https://github.com/gaorlov/YACME
      url_slug:
        type: string
        example: yacme-api-1
      description:
        type: string
        example: Config manager api

  component:
    type: object
    properties:
      name:
        type: string
        example: stateful-set-redis
      prams:
        type: object
        example:
          set_size: 5Gi
          port: 6400

  component_type:
    type: object
    properties:
      configuration_type:
        type: string
        example: kubernetes
      class:
        type: string
        example: service
      type:
        type: string
        example: AWS-based redis
      name:
        type: string
        example: redis
      description:
        type: string
        example: Key-value storage hosted on AWS

parameters:
  appSlug:
    name: app-slug
    in: query
    type: string
    example: yacme-api-1

  componentSlug:
    name: component-slug
    in: query
    type: string
    example: yacme-api-1-aws-redis-12

  componentTypeSlug:
    name: component-type-slug
    in: query
    type: string


  app:
    type: object
    required:
      - name
      - repo
    properties:
      name:
        type: string
        example: YACME API
      repo:
        type: string
        example: https://github.com/gaorlov/YACME
      description:
        type: string
        example: Config manager api

  component_type:
    type: object
    required:
      - configuration_type
      - class
      - type
      - name
    properties:
      configuration_type:
        type: string
        example: kubernetes
      class:
        type: string
        example: service
      type:
        type: string
        example: AWS-based redis
      name:
        type: string
        example: redis

  component:
    type: object
    required:
      - params
    properties:
      params:
        type: object